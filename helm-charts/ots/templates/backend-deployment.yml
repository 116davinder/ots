apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.otsNamespace }}-backend"
  namespace: "{{ .Values.otsNamespace }}"
  labels:
    app: "{{ .Values.otsNamespace }}-backend"
    {{- range $k, $v := .Values.labels }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.otsBackendReplicas }}
  selector:
    matchLabels:
      app: "{{ .Values.otsNamespace }}-backend"
  template:
    metadata:
      labels:
        app: "{{ .Values.otsNamespace }}-backend"
        {{- range $k, $v := .Values.labels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
    spec:
      containers:
      - name: "{{ .Values.otsNamespace }}-backend"
        image: "{{ .Values.otsBackendImage }}"
        imagePullPolicy: "{{ .Values.otsBackendImagePullPolicy }}"
        ports:
        - containerPort: 5000
        resources:
          {{- .Values.otsBackendResources | toYaml | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 5
        env:
          - name: OTS_SALT
            value: {{ .Values.otsBackendEnv.OTS_SALT | default "somethingIDonotWantToKnow" | quote }}
          - name: OTS_DB_HOST
            value: {{ .Values.otsBackendEnv.OTS_DB_HOST | quote }}
          - name: OTS_DB_PORT
            value: {{ .Values.otsBackendEnv.OTS_DB_PORT | default 6379 | quote }}
          - name: OTS_DB_PASSWORD
            {{- if empty .Values.otsBackendEnv.OTS_DB_PASSWORD }}
            {{- else }}
            value: {{ .Values.otsBackendEnv.OTS_DB_PASSWORD | quote }}
            {{- end }}
          - name: OTS_DB_SSL
            value: {{ .Values.otsBackendEnv.OTS_DB_SSL | default "False" | title | quote }}
          - name: OTS_DB_NAME
            value: {{ .Values.otsBackendEnv.OTS_DB_NAME | default 0 | quote }}
