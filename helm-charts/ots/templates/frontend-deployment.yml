apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.otsNamespace }}-frontend"
  namespace: "{{ .Values.otsNamespace }}"
  labels:
    app: "{{ .Values.otsNamespace }}-frontend"
    {{- range $k, $v := .Values.labels }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.otsFrontendReplicas }}
  selector:
    matchLabels:
      app: "{{ .Values.otsNamespace }}-frontend"
  template:
    metadata:
      labels:
        app: "{{ .Values.otsNamespace }}-frontend"
        {{- range $k, $v := .Values.labels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
    spec:
      containers:
      - name: "{{ .Values.otsNamespace }}-frontend"
        image: "{{ .Values.otsFrontendImage }}"
        imagePullPolicy: "{{ .Values.otsFrontendImagePullPolicy }}"
        ports:
        - containerPort: 3000
        resources:
          {{- .Values.otsFrontendResources | toYaml | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 45
          periodSeconds: 5
        env:
        - name: REACT_APP_ENV
          value: {{ .Values.otsFrontendEnv.REACT_APP_ENV | default "prod" | quote}}
        - name: REACT_APP_OTS_BACKEND_URL
          value: {{ .Values.otsFrontendEnv.REACT_APP_OTS_BACKEND_URL | quote }}
